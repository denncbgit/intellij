Primeros Pasos
##############

Introduccion
************

En el transcurso de este documento aprenderemos a utilizar la funciones basicas de intellij, el IDE (Interface Developer Enviroment) de Jetbrains 
enfocado en la programacion con Java.

.. image:: logo.jpg
        :width: 400

Instalacion
***********

Para hacernos con el instalador de esta aplicacion, debemos ir a la pagina oficial de Jetbrains donde encontraremos las diferentes versiones de Intellij
que són:

* Ultimate (de pago)
* Community (gratuita)

Aqui os dejo las caracteristicas que las diferencian.

.. image:: B1.jpg
        :width: 400

Una vez has elegido la version que mas se adapta a tus necesidades empzamos con la instalación, siendo el primer paso hace doble clic en el archivo que nos hemos
descargado.


Primero elegimos el directorio donde queremos instalar Intellij.

.. image:: B2.jpg
        :width: 400

Elegimos las caracteristicas que creamos necesarias para nuestro caso.

.. image:: B3.jpg
        :width: 400

Aceptamos terminos y condiciones de uso.

.. image:: B5.jpg
        :width: 400

Elegimos el tema del visionado de la aplicacion.

.. image:: B6.jpg
        :width: 400

Seguidamente se te ofrece la posibilidad de añadir unos Plugins que intellij considera que son de uso habitual en la comunidad.

.. image:: B7.jpg
        :width: 400

.. image:: B8.jpg
        :width: 400

Creacion de un proyecto
***********************

Una vez abierto Intellij veremos que nos da la opcion de "Create New Project".

.. image:: CR1.jpg
        :width: 400

Elegimos el nombre del proyecto.

.. image:: CR2.jpg
        :width: 400

Elegimos la version de Java que utilizaremos.

.. image:: CR3.jpg
        :width: 400

Creamos las clases necesarias para el proyecto.

.. image:: CR4.jpg
        :width: 400

Introducimos el codigo que printera el clasico "Hola Mundo"

.. image:: CR5.jpg
        :width: 400

Arriba a la derecha veremos el modo Run y el modo debbug.

.. image:: CR6.jpg
        :width: 400

En el caso del modo Run nos ejecutara el programa de modo normal en el caso de que no haya ningún error.

.. image:: CR7.jpg
        :width: 400
 
En el caso del modo debbug nos ejecutara el programa avisandonos de los posibles bugs que contenga.

.. image:: CR8.jpg
        :width: 400

Ampliacion del IDE
******************

En nuestro caso instalaremos el plugin Rainglow Color Schemes, que nos permitira tener mas variaciones de color predefinidas para nuestro IDE.

Si apretamos Ctrl+Alt+S entraremos en Settings donde en la pestaña de plugins podremos utilizar la barra buscadora para encontrar el plugin deseado, despues de instalarlo nos hara reiniciar el IDE para poder utilizarlo

.. image:: P1.jpg
        :width: 400

Ahora volveremos a entrar a Settigs y veremos el aprtado del nuevo plugin que nos permitira cambiar la gama de colores predefinidos por otra.

.. image:: P2.jpg
        :width: 400

Interficies Grafiques
*********************

Para instalar interficies grafiques debemos instalarlas a traves de plugins, en este caso utilizaremos el plugin JFormDesigner para crear formularios.

.. image:: I1.jpg
        :width: 400

Creamos el nuevo formulario de la misma forma que creamos las clases

.. image:: I2.jpg
        :width: 400

Aqui vemos la ventana que nos proporciona el IDE a partir del plugin para crear interficies graficas.

.. image:: I3.jpg
        :width: 400

Optimización de codigo
######################

Depurar el codigo
*****************

La depuración de codigos es el proceso de identificar y corregir errores, y lo que vamos a ver en la siguiente parte de la guia, seran las herramientas que nos da Intellij para facilitarnos esta parte del desarrollo.

Puntos de Interrupcion
**********************

los puntos de Interrupcion son puntos marcados por el programador que le permitiran ver los resultados del programa paso a paso, y asi identificar de manera rapida los fallos del codigo.

Para poner un punto de interrupcion en intellij nos colocaremos en la linea que queramos que sea le punto de depuración y apretaremos "Ctrl+F8" de manera que aprecera un punto rojo al lado de la linea.

.. image:: depu1.jpg
        :width: 400

Para comprobar el codigo según el punto de interrupción debemos hacer click en "mayus+F9" y veremos el contenido de la variables hasta el momento

.. image:: depu2.jpg
        :width: 400

Refactoring
***********

El refactor se basa en cambiar codigo de manera eficiente.

Una manera de hacerlo es cambiar el nombre de una función, para hacerlo deberemos apretra "Mayus+F6" encima de la funcion.

.. image:: depu3.jpg
        :width: 400

Cuando cambiemos el nombre, veremos que se habra cambiado en todas la veces que aparecia en el programa.


Linterns
********

intellij tiene sus propios linterns que nos permitiran crear directrices para que el codigo generado por varios desarrolladores sea uniforme. Estos linterns se muestran el la parta de derecha de la pantalla, sinedo de color verde(Esta todo en orden), color amarillo(algun problema que no afectara a la funcionalidad del codigo), rojo (problemas funcionales).


.. image:: depu4.jpg
        :width: 400

Control de versiones
********************

Intellij incorpora de manera nativa, la funcion de enlazar tu proyecto a git.

.. image:: depu5.jpg
        :width: 400

Nos podremos logear en nuestra cuenta github.

.. image:: depu6.jpg
        :width: 400

Tambien nos permite enlazar el proyecto con un repositorio de github.


.. image:: depu7.jpg
        :width: 400

Y una vez estamos logeados y tenemos el proyecto enlazado podremos hacer commit.

.. image:: depu8.jpg
        :width: 400

Finalmaente podremos ejecutar el git push.

.. image:: depu9.jpg
        :width: 400